import axios from "axios";
import { API_URL_DRINKS } from "../config/apiConfig";
import { getCloudinaryImageUrl } from "./CloudinaryService";

const API_URL = API_URL_DRINKS;
const token = localStorage.getItem("token");

// C·∫•u h√¨nh headers m·∫∑c ƒë·ªãnh
const headers = token
    ? {
        Authorization: `Bearer ${token}`,
        "Content-Type": "application/json",
    }
    : { "Content-Type": "application/json" };

// ü•§ L·∫•y danh s√°ch t·∫•t c·∫£ m√≥n ƒÉn
const getDrinks = async () => {
    const response = await axios.get(API_URL, { headers });
    return response.data;
};

// ‚ûï Th√™m m√≥n ƒÉn m·ªõi
const addDrinks = async (drinkData) => {
    const response = await axios.post(API_URL, drinkData, { headers });
    return response.data;
};

// üîé L·∫•y m√≥n ƒÉn theo ID
const getDrinkById = async (id) => {
    const response = await axios.get(`${API_URL}/${id}`, { headers });
    return response.data;
};

// üè∑Ô∏è L·∫•y danh s√°ch m√≥n ƒÉn theo danh m·ª•c
const getDrinksByCategory = async (categoryId) => {
    const response = await axios.get(`${API_URL}/category/${categoryId}`, { headers });
    return response.data;
};

// ‚ùå X√≥a m√≥n ƒÉn
const deleteDrink = async (id) => {
    await axios.delete(`${API_URL}/${id}`, { headers });
};

// üõ†Ô∏è C·∫≠p nh·∫≠t th√¥ng tin m√≥n ƒÉn
const updateDrink = async (drink, imageFile) => {
    let updatedDrink = { ...drink };

    // Ki·ªÉm tra n·∫øu c√≥ ·∫£nh m·ªõi th√¨ upload v√† c·∫≠p nh·∫≠t URL ·∫£nh
    if (imageFile) {
        const imageUrl = await getCloudinaryImageUrl(imageFile);
        updatedDrink.imgDrinks = imageUrl;
    }

    await axios.put(`${API_URL}/${updatedDrink.id}`, updatedDrink, { headers });
};



export { getDrinks, getDrinkById, getDrinksByCategory, deleteDrink, updateDrink, addDrinks };
